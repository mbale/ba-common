{"version":3,"sources":["webpack:///webpack/bootstrap 3b74956fc430e08eed26","webpack:///external \"typeorm\"","webpack:///./src/index.ts","webpack:///./src/compare/compare.ts","webpack:///./src/compare/types.ts","webpack:///external \"immutable\"","webpack:///external \"talisman/metrics/distance/dice\"","webpack:///./src/entity/entity.ts","webpack:///./src/http-service/http-service.ts","webpack:///external \"axios\"","webpack:///external \"qs\"","webpack:///./src/utilities.ts","webpack:///external \"typedi\"","webpack:///./src/task.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b74956fc430e08eed26","module.exports = require(\"typeorm\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typeorm\"\n// module id = 0\n// module chunks = 0","import Compare from './compare/compare';\nimport Entity from './entity/entity';\nimport HTTPService from './http-service/http-service';\nimport * as CompareTypes from './compare/types';\nimport * as Utility from './utilities';\nimport * as Task from './task';\n\nexport {\n  Compare,\n  Entity,\n  Utility,\n  Task,\n  HTTPService,\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { MatchType, Relation, CompareSettings, CompareMode, CompareModes } from './types';\nimport { EntitySchema, ObjectID } from 'typeorm';\nimport { List, Map, Collection } from 'immutable';\nimport {\n  similarity,\n} from 'talisman/metrics/distance/dice';\nimport levenshtein from 'talisman/metrics/distance/levenshtein';\nimport ServiceEntity from '../entity/entity';\n\n/**\n * Base abstract class that contains all core functionality for extending further compare services\n * \n * @abstract\n * @class Compare\n */\nabstract class Compare {\n  protected relatedEntities: List<Relation> = List();\n\n  /**\n   * The string which we compare\n   * \n   * @protected\n   * @type {string}\n   * @memberof BaseCompare\n   */\n  protected unit : string = null;\n  \n  /**\n   * Default compare settings which contains mode and threshold\n   * \n   * @protected\n   * @abstract\n   * @type {CompareSettings}\n   * @memberof BaseCompare\n   */\n  protected abstract compareSettings : CompareSettings;\n\n  /**\n   * Creates an instance of BaseCompare.\n   * \n   * @param {List<ServiceEntity>} collection \n   * @memberof BaseCompare\n   */\n  constructor(compareSettings? : CompareSettings) {\n    if (compareSettings) {\n      this.compareSettings = compareSettings;\n    }\n  }\n\n  /**\n   * Compare unit with entity\n   * \n   * @param {string} unit \n   * @param {ServiceEntity} entity  \n   * @memberof BaseCompare\n   */\n  public runInSequence(unit : string, entity : ServiceEntity) : boolean {\n    if (!unit) {\n      throw new Error('Missing unit to test');\n    }\n\n    if (!entity) {\n      throw new Error('Missing entity to compare');\n    }\n\n    this.unit = unit.toLowerCase();\n\n    const {\n      mode,\n      thresholds,\n    } = this.compareSettings;\n\n    const {\n      StrictOnly,\n      SimilarOnly,\n      StrictAndSimilar,\n    } = CompareMode;\n\n    const modelCountBefore = this.relatedEntities.count();\n\n    if (mode === StrictOnly || mode === StrictAndSimilar) {\n      const result = this.strictCompare(entity);\n\n      switch (result) {\n        case MatchType.MainIdentifier:\n          this.relatedEntities = this.relatedEntities.push({\n            entityId: entity._id,\n            relationType: CompareModes.Strict,\n            keyType: MatchType.MainIdentifier,\n          });\n          break;\n        case MatchType.KeywordIdentifier:\n          this.relatedEntities = this.relatedEntities.push({\n            entityId: entity._id,\n            relationType: CompareModes.Strict,\n            keyType: MatchType.KeywordIdentifier,\n          });\n        default:\n          break;\n      }\n    }\n\n    if (mode === SimilarOnly || mode === StrictAndSimilar) {\n      const result = this.similarCompare(entity);\n      if (result >= thresholds.dice) {\n        this.relatedEntities = this.relatedEntities.push({\n          entityId: entity._id,\n          relationType: CompareModes.Similar,\n          summedIndex: result,\n        });\n      }\n    }\n\n    const modelCountAfter = this.relatedEntities.count();\n\n    return modelCountBefore === modelCountAfter ? false : true;\n  }\n\n  /**\n   * Get similarity index between two unit\n   * \n   * @protected\n   * @param {string} unit1 \n   * @param {string} unit2 \n   * @returns {number} \n   * @memberof BaseCompare\n   */\n  protected calculateIndex(unit1 : string, unit2 : string) : number {\n    return similarity(unit1, unit2);\n  }\n\n  /**\n   * Compare unit with entity in strict way\n   * \n   * @protected\n   * @param {ServiceEntity} entity \n   * @returns {MatchType} \n   * @memberof BaseCompare\n   */\n  protected strictCompare(entity : ServiceEntity) : MatchType {\n    const unit = this.unit;\n    const entityName = entity.name.toLowerCase();\n    const keywords = List(entity._keywords);\n    // we first check if we've the same by name\n    const MainIdentifierMatch = entityName === unit;\n    // then we also check keywords\n    const keywordIdentifierMatch = keywords\n      // we make sure it's lowercase\n      .map(k => k.toLowerCase())\n      // strict find\n      .contains(unit);\n\n    if (MainIdentifierMatch) {\n      return MatchType.MainIdentifier;\n    }\n\n    if (keywordIdentifierMatch) {\n      return MatchType.KeywordIdentifier;\n    }\n\n    return MatchType.NotFound;\n  }\n\n  /**\n   * Compare unit with entity in similar indexed way\n   * \n   * @protected\n   * @param {ServiceEntity} entity \n   * @returns {number} \n   * @memberof BaseCompare\n   */\n  protected similarCompare(entity : ServiceEntity) : number {\n    const unit = this.unit;\n    const entityName = entity.name.toLowerCase();\n    const diceThreshold = this.compareSettings.thresholds.dice;\n    const keywords = List(entity._keywords);\n\n    const mainIdentifierSimilarity = this\n      .calculateIndex(entityName, unit);\n\n    const keywordsIndexed = keywords\n      // calculate their indexes\n      .map((keyword) => {\n        return {\n          keyword: keyword.toLowerCase(), // make sure it's lowercase\n          index: this.calculateIndex(keyword, unit),\n        };\n      })\n      // remove invalids\n      .filter(keywordIndexed => keywordIndexed.index >= diceThreshold)\n      // sort them by rank\n      .sort((a, b) => b.index - a.index);\n\n    const mainIndex = mainIdentifierSimilarity >= diceThreshold ? mainIdentifierSimilarity : 0;\n    const keywordsIndex = keywordsIndexed.reduce((sum, next) => sum + next.index, 0);\n\n    /*\n    We rank them by correlation\n    */\n    const summedIndex = mainIndex + keywordsIndex;\n\n    return summedIndex;\n  }\n\n  /**\n   * Returns the related objects\n   * \n   * @returns {List<Relation>} \n   * @memberof BaseCompare\n   */\n  public getRelatedByRank() {\n    return this.relatedEntities\n      .sort((a, b) => b.summedIndex - a.summedIndex)\n      .toArray();\n  }\n}\n\nexport default Compare;\n\n\n// WEBPACK FOOTER //\n// ./src/compare/compare.ts","import { ObjectID } from 'typeorm';\n/**\n * Compare type\n * \n * @enum {number}\n */\nexport enum CompareModes {\n  Strict, Similar,\n}\n\n/**\n * Relation object between unit & entity\n * \n * @interface Relation\n */\nexport interface Relation {\n  /**\n   * Entity Id which unit is related to\n   * \n   * @type {ObjectID}\n   * @memberof RelatedEntity\n   */\n  entityId : ObjectID;\n  /**\n   * Relation type which shows how it relates in comparison\n   * strict | similar\n   * \n   * @type {CompareModes}\n   * @memberof RelatedEntity\n   */\n  relationType : CompareModes;\n  /**\n   * KeyType which shows what key is our base on comparison\n   * only during strict\n   * \n   * @type {(MatchType.MainIdentifier | MatchType.KeywordIdentifier)}\n   * @memberof RelatedEntity\n   */\n  keyType? : MatchType.MainIdentifier | MatchType.KeywordIdentifier;\n  /**\n   * Contains of the summed indexes of relativeness\n   * only during similar\n   * \n   * @type {number}\n   * @memberof RelatedEntity\n   */\n  summedIndex? : number;\n}\n\n/**\n * Type of mode result\n * \n * @enum {number}\n */\nexport enum MatchType {\n  MainIdentifier, KeywordIdentifier, NotFound,\n}\n\n/**\n * Contains limit for calculation\n * dice: between to unit\n * levenshtein: numerical distance\n * \n * @export\n * @interface Thresholds\n */\nexport interface Thresholds {\n  dice: number;\n  levenshtein: number;\n}\n\n/**\n * Settings for comparing mode\n * \n * @export\n * @enum {number}\n */\nexport enum CompareMode {\n  StrictOnly, SimilarOnly, StrictAndSimilar,\n}\n\n/**\n * Compare options object for compare service\n * \n * @export\n * @interface CompareSettings\n */\nexport interface CompareSettings {\n  mode : CompareMode;\n  thresholds : Thresholds;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/compare/types.ts","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"talisman/metrics/distance/dice\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"talisman/metrics/distance/dice\"\n// module id = 6\n// module chunks = 0","import {\n  ObjectID,\n  ObjectIdColumn,\n  Column,\n  BeforeUpdate,\n  BeforeInsert,\n} from 'typeorm';\n\nabstract class ServiceEntity {\n  @ObjectIdColumn()\n  _id : ObjectID;\n\n  @Column()\n  name : string;\n\n  @Column()\n  _keywords : string[] = [];\n  \n  @Column()\n  _createdAt : Date = new Date();\n\n  @Column()\n  _updatedAt : Date = new Date();\n\n  @BeforeUpdate()\n  updateModificationDate() {\n    this._updatedAt = new Date();\n  }\n}\n\nexport default ServiceEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/entity.ts","import axios, { AxiosInstance} from 'axios';\nimport qs from 'qs';\n\n/**\n * Default base class for each service communicator\n * \n * @abstract\n * @class HTTPService\n */\nabstract class HTTPService {\n  /**\n   * Contains root URL of service\n   * \n   * @static\n   * @memberof HTTPService\n   */\n  public static serviceBaseURL : string = '';\n  public static axiosInstance : AxiosInstance = null;\n\n  /**\n   * Initialize the core service with bootstrapped values\n   * Needs to be called\n   * \n   * @static\n   * @param {string} serviceBaseURL \n   * @returns \n   * @memberof HTTPService\n   */\n  public static initialize(serviceBaseURL : string) {\n    this.serviceBaseURL = serviceBaseURL;\n    this.axiosInstance = axios.create({\n      paramsSerializer(param) {\n        // by default axios convert same query params into array in URL e.g. ids=[] \n        return qs.stringify(param, { indices: false });\n      },\n      baseURL: `${serviceBaseURL}`,\n    });\n  }\n\n  /**\n   * Checks if service's healthy\n   * \n   * @static\n   * @returns {Promise<boolean>} \n   * @memberof HTTPService\n   */\n  public static async ping() : Promise<boolean> {\n    try {\n      const request = await this.axiosInstance.get(`${this.serviceBaseURL}/ping`);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default HTTPService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http-service/http-service.ts","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"qs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"qs\"\n// module id = 10\n// module chunks = 0","import { ConnectionOptions, createConnection } from 'typeorm';\nimport { Container } from 'typedi';\n\n/**\n * BaseError\n * \n * @export\n * @class AppError\n * @extends {Error}\n */\nexport class AppError extends Error {\n  constructor(message : string) {\n    super(message);\n\n    Error.captureStackTrace(this, this.constructor);\n    \n    // just in case we save name of constructor too\n    this.name = this.constructor.name;\n  }\n}\n\n/**\n * Used to inject db dependency\n * \n * @export\n * @param {string} mongodbURL \n * @param {Function[]} entities \n * @returns \n */\nexport function connection(mongodbURL : string, entities : Function[]) {\n  return function (object : object, propertyName : string, index? : number) {\n    const dbOptions : ConnectionOptions = {\n      entities,\n      type: 'mongodb',\n      url: mongodbURL,\n      logging: ['query', 'error'],\n    };\n    const connection = createConnection(dbOptions);\n    Container.registerHandler({ object, propertyName, index, value: () => connection });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.ts","module.exports = require(\"typedi\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typedi\"\n// module id = 12\n// module chunks = 0","import ServiceEntity from './entity/entity';\nimport { MongoRepository } from 'typeorm'; \nimport { Container } from 'typedi';\n\nexport abstract class BaseTask {\n  public repository : MongoRepository<ServiceEntity> = null;\n\n  constructor(repository : MongoRepository<ServiceEntity>) {\n    this.repository = repository;\n  }\n\n  // public abstract async run(jobData? : JobData) : Promise<JobResult>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/task.ts"],"sourceRoot":""}