{"version":3,"sources":["webpack:///webpack/bootstrap 11a18a16e3de3ef49952","webpack:///./src/compare/types.ts","webpack:///external \"immutable\"","webpack:///external \"typeorm\"","webpack:///./src/index.ts","webpack:///./src/compare/compare.ts","webpack:///external \"talisman/metrics/distance/dice\"","webpack:///./src/http-service/http-service.ts","webpack:///external \"inversify\"","webpack:///./src/entity/entity.ts","webpack:///./src/utilities.ts","webpack:///external \"bull\"","webpack:///external \"winston-mongodb\"","webpack:///./src/entity/types.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 11a18a16e3de3ef49952","import { ObjectID } from 'typeorm';\n/**\n * Compare type\n * \n * @enum {number}\n */\nexport enum CompareModes {\n  Strict, Similar,\n}\n\n/**\n * Relation object between unit & entity\n * \n * @interface Relation\n */\nexport interface CompareRelation {\n  /**\n   * Entity Id which unit is related to\n   * \n   * @type {ObjectID}\n   * @memberof RelatedEntity\n   */\n  entityId : ObjectID;\n  /**\n   * Relation type which shows how it relates in comparison\n   * strict | similar\n   * \n   * @type {CompareModes}\n   * @memberof RelatedEntity\n   */\n  relationType : CompareModes;\n  /**\n   * KeyType which shows what key is our base on comparison\n   * only during strict\n   * \n   * @type {(CompareMatchType.MainIdentifier | CompareMatchType.KeywordIdentifier)}\n   * @memberof RelatedEntity\n   */\n  keyType? : CompareMatchType.MainIdentifier | CompareMatchType.KeywordIdentifier;\n  /**\n   * Contains of the summed indexes of relativeness\n   * only during similar\n   * \n   * @type {number}\n   * @memberof RelatedEntity\n   */\n  summedIndex? : number;\n}\n\n/**\n * Type of mode result\n * \n * @enum {number}\n */\nexport enum CompareMatchType {\n  MainIdentifier, KeywordIdentifier, NotFound,\n}\n\n/**\n * Contains limit for calculation\n * dice: between to unit\n * levenshtein: numerical distance\n * \n * @export\n * @interface Thresholds\n */\nexport interface CompareThresholds {\n  dice: number;\n  levenshtein: number;\n}\n\n/**\n * Settings for comparing mode\n * \n * @export\n * @enum {number}\n */\nexport enum CompareMode {\n  StrictOnly, SimilarOnly, StrictAndSimilar,\n}\n\n/**\n * Compare options object for compare service\n * \n * @export\n * @interface CompareSettings\n */\nexport interface CompareSettings {\n  mode : CompareMode;\n  thresholds : CompareThresholds;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/compare/types.ts","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"typeorm\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typeorm\"\n// module id = 2\n// module chunks = 0","import Compare from './compare/compare';\nimport HTTPService from './http-service/http-service';\nimport ServiceEntity from './entity/entity';\nimport { AppError, dIConnection, dILogger, dIRedisQueues } from './utilities';\nimport {\n  Game,\n  League,\n  Match,\n  MatchMapType,\n  MatchOdds,\n  MatchOddsType,\n  MatchSource,\n  MatchSourceType,\n  MatchStatusType,\n  MatchUpdate,\n  Service,\n  Team,\n  TeamMember,\n  TeamSocialSite,\n  TeamSocialSiteType,\n} from './entity/types';\nimport { \n  GetMatchesQueryParams,\n  GetGamesQueryParams,\n} from './http-service/types';\nimport { \n  CompareModes, \n  CompareMode, \n  CompareSettings,\n  CompareMatchType, \n  CompareRelation, \n  CompareThresholds,\n} from './compare/types';\nimport { Container } from 'typedi/Container';\n\nexport {\n  Compare,\n  CompareMode,\n  CompareModes,\n  CompareSettings, \n  CompareMatchType,\n  CompareRelation,\n  CompareThresholds,\n  Service,\n  ServiceEntity,\n  MatchMapType,\n  Match,\n  MatchSource,\n  MatchSourceType,\n  MatchOdds,\n  MatchOddsType,\n  MatchStatusType,\n  MatchUpdate,\n  Team, \n  TeamMember, \n  TeamSocialSite, \n  TeamSocialSiteType,\n  GetMatchesQueryParams,\n  GetGamesQueryParams,\n  League,\n  Game,\n  AppError,\n  dIConnection,\n  dILogger,\n  dIRedisQueues,\n  HTTPService,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { CompareMatchType, CompareRelation, CompareSettings,\n  CompareMode, CompareModes } from './types';\nimport { EntitySchema, ObjectID } from 'typeorm';\nimport { List, Map, Collection } from 'immutable';\nimport {\n  similarity,\n} from 'talisman/metrics/distance/dice';\nimport levenshtein from 'talisman/metrics/distance/levenshtein';\nimport { Service } from '../entity/types';\n\n/**\n * Base abstract class that contains all core functionality for extending further compare services\n * \n * @abstract\n * @class Compare\n */\nabstract class Compare {\n  protected relatedEntities: List<CompareRelation> = List();\n\n  /**\n   * The string which we compare\n   * \n   * @protected\n   * @type {string}\n   * @memberof BaseCompare\n   */\n  protected unit : string = null;\n  \n  /**\n   * Default compare settings which contains mode and threshold\n   * \n   * @protected\n   * @abstract\n   * @type {CompareSettings}\n   * @memberof BaseCompare\n   */\n  protected abstract compareSettings : CompareSettings;\n\n  /**\n   * Creates an instance of BaseCompare.\n   * \n   * @param {List<ServiceEntity>} collection \n   * @memberof BaseCompare\n   */\n  constructor(compareSettings? : CompareSettings) {\n    if (compareSettings) {\n      this.compareSettings = compareSettings;\n    }\n  }\n\n  /**\n   * Compare unit with entity\n   * \n   * @param {string} unit \n   * @param {ServiceEntity} entity  \n   * @memberof BaseCompare\n   */\n  public runInSequence(unit : string, entity : Service) : boolean {\n    if (!unit) {\n      throw new Error('Missing unit to test');\n    }\n\n    if (!entity) {\n      throw new Error('Missing entity to compare');\n    }\n\n    this.unit = unit.toLowerCase();\n\n    const {\n      mode,\n      thresholds,\n    } = this.compareSettings;\n\n    const {\n      StrictOnly,\n      SimilarOnly,\n      StrictAndSimilar,\n    } = CompareMode;\n\n    const modelCountBefore = this.relatedEntities.count();\n\n    if (mode === StrictOnly || mode === StrictAndSimilar) {\n      const result = this.strictCompare(entity);\n\n      switch (result) {\n        case CompareMatchType.MainIdentifier:\n          this.relatedEntities = this.relatedEntities.push({\n            entityId: entity._id,\n            relationType: CompareModes.Strict,\n            keyType: CompareMatchType.MainIdentifier,\n          });\n          break;\n        case CompareMatchType.KeywordIdentifier:\n          this.relatedEntities = this.relatedEntities.push({\n            entityId: entity._id,\n            relationType: CompareModes.Strict,\n            keyType: CompareMatchType.KeywordIdentifier,\n          });\n        default:\n          break;\n      }\n    }\n\n    if (mode === SimilarOnly || mode === StrictAndSimilar) {\n      const result = this.similarCompare(entity);\n      if (result >= thresholds.dice) {\n        this.relatedEntities = this.relatedEntities.push({\n          entityId: entity._id,\n          relationType: CompareModes.Similar,\n          summedIndex: result,\n        });\n      }\n    }\n\n    const modelCountAfter = this.relatedEntities.count();\n\n    return modelCountBefore === modelCountAfter ? false : true;\n  }\n\n  /**\n   * Get similarity index between two unit\n   * \n   * @protected\n   * @param {string} unit1 \n   * @param {string} unit2 \n   * @returns {number} \n   * @memberof BaseCompare\n   */\n  protected calculateIndex(unit1 : string, unit2 : string) : number {\n    return similarity(unit1, unit2);\n  }\n\n  /**\n   * Compare unit with entity in strict way\n   * \n   * @protected\n   * @param {Service} entity \n   * @returns {CompareMatchType} \n   * @memberof BaseCompare\n   */\n  protected strictCompare(entity : Service) : CompareMatchType {\n    const unit = this.unit;\n    const entityName = entity.name.toLowerCase();\n    const keywords = List(entity._keywords);\n    // we first check if we've the same by name\n    const MainIdentifierMatch = entityName === unit;\n    // then we also check keywords\n    const keywordIdentifierMatch = keywords\n      // we make sure it's lowercase\n      .map(k => k.toLowerCase())\n      // strict find\n      .contains(unit);\n\n    if (MainIdentifierMatch) {\n      return CompareMatchType.MainIdentifier;\n    }\n\n    if (keywordIdentifierMatch) {\n      return CompareMatchType.KeywordIdentifier;\n    }\n\n    return CompareMatchType.NotFound;\n  }\n\n  /**\n   * Compare unit with entity in similar indexed way\n   * \n   * @protected\n   * @param {Service} entity \n   * @returns {number} \n   * @memberof BaseCompare\n   */\n  protected similarCompare(entity : Service) : number {\n    const unit = this.unit;\n    const entityName = entity.name.toLowerCase();\n    const diceThreshold = this.compareSettings.thresholds.dice;\n    const keywords = List(entity._keywords);\n\n    const mainIdentifierSimilarity = this\n      .calculateIndex(entityName, unit);\n\n    const keywordsIndexed = keywords\n      // calculate their indexes\n      .map((keyword) => {\n        return {\n          keyword: keyword.toLowerCase(), // make sure it's lowercase\n          index: this.calculateIndex(keyword, unit),\n        };\n      })\n      // remove invalids\n      .filter(keywordIndexed => keywordIndexed.index >= diceThreshold)\n      // sort them by rank\n      .sort((a, b) => b.index - a.index);\n\n    const mainIndex = mainIdentifierSimilarity >= diceThreshold ? mainIdentifierSimilarity : 0;\n    const keywordsIndex = keywordsIndexed.reduce((sum, next) => sum + next.index, 0);\n\n    /*\n    We rank them by correlation\n    */\n    const summedIndex = mainIndex + keywordsIndex;\n\n    return summedIndex;\n  }\n\n  /**\n   * Returns the related objects\n   * \n   * @returns {List<CompareRelation>} \n   * @memberof BaseCompare\n   */\n  public getRelatedByRank() {\n    return this.relatedEntities\n      .sort((a, b) => b.summedIndex - a.summedIndex)\n      .toArray();\n  }\n}\n\nexport default Compare;\n\n\n\n// WEBPACK FOOTER //\n// ./src/compare/compare.ts","module.exports = require(\"talisman/metrics/distance/dice\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"talisman/metrics/distance/dice\"\n// module id = 6\n// module chunks = 0","import axios, { AxiosInstance } from 'axios';\nimport { inject, injectable } from 'inversify';\n\n/**\n * Default base class for each service communicator\n * \n * @abstract\n * @class HTTPService\n */\n@injectable()\nabstract class HTTPService {\n  constructor(\n    @inject('axios') protected axiosInstance: AxiosInstance,\n  ) {\n    this.axiosInstance = axiosInstance;\n  }\n\n  /**\n   * Checks if service's healthy\n   * \n   * @static\n   * @returns {Promise<boolean>} \n   * @memberof HTTPService\n   */\n  public async ping() : Promise<boolean> {\n    try {\n      const request = await this.axiosInstance.get('/');\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default HTTPService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http-service/http-service.ts","module.exports = require(\"inversify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"inversify\"\n// module id = 8\n// module chunks = 0","import { Service } from './types';\nimport {\n  ObjectID,\n  ObjectIdColumn,\n  Column,\n  BeforeUpdate,\n} from 'typeorm';\n\nabstract class ServiceEntity implements Service {\n  @ObjectIdColumn()\n  _id : ObjectID;\n\n  @Column()\n  name : string;\n\n  @Column()\n  _keywords : string[] = [];\n  \n  @Column()\n  _createdAt : Date = new Date();\n\n  @Column()\n  _updatedAt : Date = new Date();\n\n  @BeforeUpdate()\n  updateModificationDate() {\n    this._updatedAt = new Date();\n  }\n}\n\nexport default ServiceEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/entity.ts","import * as Queue from 'bull';\nimport { ConnectionOptions, createConnection } from 'typeorm';\nimport { Container } from 'typedi';\nimport { Map } from 'immutable';\nimport { Queue as IQueue } from 'bull';\n// https://github.com/OptimalBits/bull/issues/786\n// import 'winston-mongodb';\n// import { MongoDB, Winston } from 'winston-mongodb';\nimport { Winston } from 'winston';\nimport 'winston-mongodb';\n// https://github.com/winstonjs/winston-mongodb/issues/97\n\n/**\n * BaseError\n * \n * @export\n * @class AppError\n * @extends {Error}\n */\nexport class AppError extends Error {\n  constructor(message : string) {\n    super(message);\n\n    Error.captureStackTrace(this, this.constructor);\n    \n    // just in case we save name of constructor too\n    this.name = this.constructor.name;\n  }\n}\n\n/**\n * Used to inject db dependency\n * \n * @export\n * @param {string} mongodbURL \n * @param {Function[]} entities \n * @param {typeof Container} container \n * @returns \n */\nexport function dIConnection(\n  mongodbURL : string, entities : Function[], container : typeof Container) {\n  if (!mongodbURL) {\n    throw new Error('Missing mongodb URL');\n  }\n  return function (object : object, propertyName : string, index? : number) {\n    try {\n      const dbOptions : ConnectionOptions = {\n        entities,\n        type: 'mongodb',\n        url: mongodbURL,\n        logging: ['query', 'error'],\n      };\n\n      const connection = createConnection(dbOptions);\n      container.registerHandler({ object, propertyName, index, value: () => connection }); \n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\n/**\n * Injectable Logger interface\n * \n * @export\n * @param {string} mongodb_url \n * @returns {winston.LoggerInstance} \n */\nexport function dILogger(mongodbURL : string, winston: Winston, container : typeof Container) {\n  if (!mongodbURL || !winston || !container) {\n    throw new Error('Missing dependencies');\n  }\n  return function (object : object, propertyName : string, index? : number) {\n    try {\n      // winston mongodb has typebug\n      const transports = winston.transports;\n      const logger = new winston.Logger({\n        transports: [\n          new (winston.transports.Console)({ level: 'info' }),\n          new winston.transports.MongoDB({\n            level: 'error',\n            db: mongodbURL,\n            collection: 'logs',\n            storeHost: true, // origin of log (hostname)\n            tryReconnect: true, // we make sure we always log\n          }),\n        ],\n      });\n\n\n      container.registerHandler({ object, propertyName, index, value: () => logger }); \n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\n/**\n * Injectable Redis interface\n * \n * @export\n * @param {string} redis_url \n * @param {*} queues \n * @param {winston.LoggerInstance} logger \n * @returns {{}} \n */\n\nexport function dIRedisQueues(redisURL: string, queues: any, container: typeof Container) {\n  if (!redisURL) {\n    throw new Error('Missing dependencies');\n  }\n  return function (object : object, propertyName : string, index? : number) {\n    try {\n      let store = Map<string, IQueue>();\n      \n      for (const [varName, queueName] of Object.entries(queues)) {\n        store = store.set(queueName, new Queue(queueName, redisURL));\n      }\n\n      container.registerHandler({ object, propertyName, index, value: () => store }); \n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.ts","module.exports = require(\"bull\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bull\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"winston-mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston-mongodb\"\n// module id = 12\n// module chunks = 0","import { ObjectID } from 'typeorm';\n/**\n * We need the type only during compile time\n * We don't want to include the whole class all the time\n * \n * @export\n * @interface Service\n */\nexport interface Service {\n  _id : ObjectID;\n  name : string;\n  _keywords : string[];\n  _createdAt : Date;\n  _updatedAt : Date;\n}\n\n/*\n  Match\n*/\n\nexport interface Match {\n  _id : ObjectID;\n  gameId: ObjectID;\n  leagueId: ObjectID;\n  homeTeamId: ObjectID;\n  awayTeamId: ObjectID;\n  date: Date;\n  odds: MatchOdds[];\n  updates: MatchUpdate[];\n}\n\nexport interface MatchOdds {\n  home: number;\n  away: number;\n  type: MatchOddsType;\n  _id: ObjectID;\n}\n\nexport enum MatchOddsType {\n  MoneyLine = 'moneyline',\n  Spread = 'spread',\n  Total = 'total',\n}\n\nexport enum MatchSourceType {\n  Pinnacle = 'pinnacle',\n  Oddsgg = 'oddsgg',\n}\n\nexport interface MatchSource {\n  type: MatchSourceType;\n  leagueId: number;\n  matchId: number;\n  fetchedAt: Date;\n}\n\nexport enum MatchMapType {\n  Match = 'match',\n  Map1  = 'map1',\n  Map2  = 'map2',\n  Map3  = 'map3',\n  Map4  = 'map4',\n  Map5  = 'map5',\n  Map6  = 'map6',\n  Map7 = 'map7',\n  Unknown = 'unknown',\n}\n\nexport enum MatchStatusType {\n  Settled = 'settled',\n  ReSettled = 'resettled',\n  Canceled = 'canceled',\n  ReSettleCancelled = 'resettlecancelled',\n  Deleted = 'deleted',\n  Unknown = 'unknown',\n  // not in db\n  Upcoming = 'upcoming',\n  Completed = 'completed',\n\n}\n\nexport interface MatchUpdate {\n  mapType: MatchMapType;\n  statusType: MatchStatusType;\n  endDate: Date;\n  homeTeamScore: number;\n  awayTeamScore: number;\n  addedAt: Date;\n}\n\n/*\n  Team\n*/\n\nexport interface TeamMember {\n  name: string;\n  info?: string;\n  joinedIn?: Date;\n  countryCode?: string;\n  sites?: string[];\n  role?: string;\n}\n\nexport enum TeamSocialSiteType {\n  Facebook, Twitter,\n}\n\nexport interface TeamSocialSite {\n  type : TeamSocialSiteType;\n  name : string;\n}\n\nexport interface Team {\n  info? : string;\n  name : string;\n  members? : TeamMember[];\n  countryCode? : string;\n  site : string;\n  socialSites : TeamSocialSite[];\n  logo? : string;\n}\n\n/*\n  League\n*/\n\nexport interface League {\n  name : string;\n}\n\n\n/*\n  Game\n*/\n\nexport interface Game {\n  _id: ObjectID;\n  name : string;\n  slug : string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/types.ts"],"sourceRoot":""}